# data file for the Fltk User Interface Designer (fluid)
version 1.0400
i18n_type 1
i18n_include {<libintl.h>}
i18n_conditional {}
i18n_function gettext
i18n_static_function _
header_name {.h}
code_name {.cxx}
decl {\#include "FL/Fl_Color_Chooser.H"} {public global
}

decl {\#include "mrvCore/mrvMedia.h"} {public global
}

decl {\#include "mrvFl/mrvPreferences.h"} {public global
}

decl {\#include "mrvWidgets/mrvButton.h"} {public global
}

decl {\#include "mrvFl/mrvChoice.h"} {public global
}

decl {\#include "mrvFl/mrvHorSlider.h"} {public global
}

decl {\#include "mrvWidgets/mrvOCIOBrowser.h"} {public global
}

decl {\#include "mrvFl/mrvFileRequester.h"} {public global
}

decl {\#include "mrvWidgets/mrvPreferencesTree.h"} {public global
}

decl {\#include "mrvWidgets/mrvPopupMenu.h"} {public global
}

decl {\#include "make_ocio_chooser.h"} {public global
}

decl {\#include "mrViewer.h"} {public global
}

class PreferencesUI {open
} {
  Function {make_window(ViewerUI* m)} {open private
  } {
    Fl_Window uiMain {
      label Preferences
      user_data this user_data_type {PreferencesUI*}
      callback {mrv::Preferences prefs(v, ViewerUI::app->settingsObject() );
uiMain->hide();} open
      xywh {497 78 847 469} type Double resizable non_modal visible
    } {
      Fl_Group {} {open
        xywh {0 0 867 469} box FLAT_BOX
      } {
        Fl_Wizard uiWizard {
          label Settings open
          xywh {285 30 565 430} box PLASTIC_UP_BOX labelcolor 32
        } {
          Fl_Group {} {
            label {User Interface}
            xywh {290 53 555 349} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label {Window Behavior}
              xywh {295 57 545 124} box ROUNDED_BOX
            } {
              Fl_Check_Button uiPrefsAlwaysOnTop {
                label {Always on Top}
                tooltip {When selected, mrViewer's window will always show up on top of other windows on the desktop.} xywh {314 71 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsSingleInstance {
                label {Single Instance}
                tooltip {When selected, only a single mrViewer instance is allowed.
If you try to open several mrViewers with different images, all these images will be sent to the already open mrViewer.} xywh {314 102 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsAutoFitImage {
                label {Auto Refit Image}
                tooltip {When selected, mrViewer will apply a fit image operation on each video played.  This effectly means the video will be resized automatically based on the size of the window.} xywh {314 135 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Group uiPrefsOpenMode {open
                xywh {605 70 195 95} box UP_BOX
              } {
                Fl_Round_Button {} {
                  label Normal
                  tooltip {When selected, mrViewer will resize its window to the first image.} xywh {610 76 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX value 1 align 8
                }
                Fl_Round_Button {} {
                  label Fullscreen
                  tooltip {When selected, mrViewer will start in full screen mode.} xywh {610 104 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                }
                Fl_Round_Button {} {
                  label Presentation
                  tooltip {When selected, mrViewer will start in presentation mode.} xywh {610 133 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                }
              }
            }
            Fl_Group {} {
              label {UI Elements}
              xywh {295 199 545 193} box ROUNDED_BOX
            } {
              Fl_Check_Button uiPrefsMenuBar {
                label {Menu Bar}
                tooltip {When selected, mrViewer will start with the menu bar already shown.} xywh {300 226 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsTopbar {
                label Topbar
                tooltip {When selected, mrViewer will start with its channel, gain, gamma toolbar visible.} xywh {301 254 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsPixelToolbar {
                label {Pixel Toolbar}
                tooltip {When selected, mrViewer will start with the pixel toolbar shown.} xywh {301 284 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
              }
              Fl_Check_Button uiPrefsTimeline {
                label Timeline
                tooltip {When selected, mrViewer will start with the timeline shown.} xywh {301 312 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsMacOSMenus {
                label {macOS Menus}
                tooltip {This is a macOS setting only.  When selected the menus will appear on the system toolbar instead of the mrViewer toolbar.} xywh {475 225 25 25} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Group {} {open
                xywh {300 330 170 55}
              } {
                Fl_Check_Button uiPrefsToolBar {
                  label Tooldock
                  tooltip {When selected, mrViewer will start with the waveform already open.} xywh {300 340 25 25} box UP_BOX down_box DOWN_BOX align 136
                  class {mrv::CheckButton}
                }
              }
              Fl_Group {} {open
                xywh {450 276 215 35}
              } {
                Fl_Check_Button uiPrefsImageInfo {
                  label {Media Info}
                  tooltip {When selected, mrViewer will start with the media information window already open.} xywh {475 280 25 25} box UP_BOX down_box DOWN_BOX align 136
                  class {mrv::CheckButton}
                }
              }
              Fl_Check_Button uiPrefsColorArea {
                label {Color Area}
                tooltip {When selected, mrViewer will start with the color area window already open.} xywh {475 311 25 25} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Group {} {open
                xywh {465 320 200 70}
              } {
                Fl_Check_Button uiPrefsPaintTools {
                  label {Action Tools}
                  tooltip {When selected, mrViewer will start with the action tools already showing.} xywh {476 341 25 25} box UP_BOX down_box DOWN_BOX align 136
                  class {mrv::CheckButton}
                }
              }
              Fl_Check_Button uiPrefsHistogram {
                label Histogram
                tooltip {When selected, mrViewer will start with the histogram already open.} xywh {670 257 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsVectorscope {
                label Vectorscope
                tooltip {When selected, mrViewer will start with the vectorscope already open.} xywh {670 286 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsWaveform {
                label Waveform
                tooltip {When selected, mrViewer will start with the waveform already open.} xywh {671 315 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
            }
          }
          Fl_Group {} {
            label {View Window}
            xywh {290 39 555 349} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label Defaults
              xywh {300 69 529 162} box ROUNDED_BOX
            } {
              Fl_Value_Input uiPrefsViewGain {
                label Gain
                tooltip {Sets the default gain when mrViewer starts.} xywh {400 86 80 25} maximum 64 value 1 textcolor 56
              }
              Fl_Value_Input uiPrefsViewGamma {
                label Gamma
                tooltip {Sets the default gamma when mrViewer starts.} xywh {690 85 60 25} maximum 4 value 1 textcolor 56
              }
              Fl_Choice uiPrefsCropArea {
                label Crop
                user_data this user_data_type {PreferencesUI*}
                tooltip {Allows you to select a standard cropping area around image.} xywh {330 135 155 25} box THIN_DOWN_BOX down_box BORDER_BOX align 1
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label {0.00 None}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.00 Square}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.19 Movietone}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.37 Academy (Full Frame)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.50 Still Photo}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.56 STV - HDTV (14:9)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.66 European Widescreen}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.77 HDTV (16:9)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.85 Widescreen (3-perf)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.00 Univisium}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.10 VistaVision}
                  xywh {15 15 100 20}
                }
                MenuItem {} {
                  label {2.20 70mm}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.35 CinemaScope (old 2.35)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.39 Panavision (new 2.35)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {4.00 Polyvision}
                  xywh {5 5 100 20}
                }
              }
              Fl_Check_Button uiPrefsSafeAreas {
                label {Safe Areas}
                user_data this user_data_type {PreferencesUI*}
                tooltip {When mrViewer starts, the safe area display will be active by default.} xywh {650 135 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Choice uiPrefsZoomSpeed {
                label {Zoom Speed} open
                xywh {355 190 90 25} down_box BORDER_BOX align 1
              } {
                MenuItem {} {
                  label Slow
                  xywh {10 10 30 20}
                }
                MenuItem {} {
                  label Medium
                  xywh {20 20 30 20}
                }
                MenuItem {} {
                  label Fast
                  xywh {30 30 30 20}
                }
              }
            }
            Fl_Group uiPrefsHud {
              label HUD
              user_data this user_data_type {PreferencesUI*}
              tooltip {This area specifies which elements should be shown as a HUD overlay on the view screen.} xywh {305 251 524 126} box UP_BOX
            } {
              Fl_Check_Button uiPrefsHudFilename {
                label Filename
                user_data this user_data_type {PreferencesUI*}
                xywh {335 300 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudDirectory {
                label Directory
                user_data this user_data_type {PreferencesUI*}
                xywh {335 270 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFrame {
                label Frame
                user_data this user_data_type {PreferencesUI*}
                xywh {335 330 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFrameRange {
                label {Frame Range}
                user_data this user_data_type {PreferencesUI*}
                xywh {480 330 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFrameCount {
                label {Frame Count}
                user_data this user_data_type {PreferencesUI*}
                xywh {650 300 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudResolution {
                label Resolution
                user_data this user_data_type {PreferencesUI*}
                xywh {480 270 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFPS {
                label FPS
                user_data this user_data_type {PreferencesUI*}
                xywh {480 300 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudAttributes {
                label Attributes
                user_data this user_data_type {PreferencesUI*}
                xywh {650 270 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudTimecode {
                label Timecode
                user_data this user_data_type {PreferencesUI*}
                xywh {650 332 20 18} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
            }
          }
          Fl_Group {} {
            label {Language and Colors}
            xywh {290 39 555 349} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label UI
              xywh {362 60 403 199} box ROUNDED_BOX
            } {
              Fl_Choice uiLanguage {
                label Language open
                xywh {505 80 160 25} down_box BORDER_BOX
              } {
                MenuItem {} {
                  label Arabic
                  xywh {125 125 100 20}
                }
                MenuItem {} {
                  label Czech
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label German
                  xywh {15 15 100 20}
                }
                MenuItem {} {
                  label English
                  xywh {35 35 100 20}
                }
                MenuItem {} {
                  label Spanish
                  xywh {25 25 100 20}
                }
                MenuItem {} {
                  label French
                  xywh {35 35 100 20}
                }
                MenuItem {} {
                  label Greek
                  xywh {145 145 100 20}
                }
                MenuItem {} {
                  label Italian
                  xywh {45 45 100 20}
                }
                MenuItem {} {
                  label Japanese
                  xywh {55 55 100 20}
                }
                MenuItem {} {
                  label Korean
                  xywh {65 65 100 20}
                }
                MenuItem {} {
                  label Dutch
                  xywh {75 75 100 20}
                }
                MenuItem {} {
                  label Polish
                  xywh {75 75 100 20}
                }
                MenuItem {} {
                  label Portuguese
                  xywh {85 85 100 20}
                }
                MenuItem {} {
                  label Romanian
                  xywh {95 95 100 20}
                }
                MenuItem {} {
                  label Russian
                  xywh {105 105 100 20}
                }
                MenuItem {} {
                  label Swedish
                  xywh {135 135 100 20}
                }
                MenuItem {} {
                  label Turkish
                  xywh {115 115 100 20}
                }
                MenuItem {} {
                  label Chinese
                  xywh {135 135 100 20}
                }
              }
              Fl_Choice uiScheme {
                label Scheme
                callback {Fl::scheme( o->mvalue()->text );}
                xywh {519 133 100 25} down_box BORDER_BOX align 1
              } {
                MenuItem {} {
                  label base
                  xywh {5 5 36 21}
                }
                MenuItem {} {
                  label plastic
                  xywh {15 15 36 21}
                }
                MenuItem {} {
                  label {gtk+}
                  xywh {25 25 36 21}
                }
                MenuItem {} {
                  label gleam
                  xywh {35 35 36 21}
                }
              }
              Fl_Choice uiColorTheme {
                label {Color Theme}
                user_data m user_data_type {ViewerUI*}
                callback {if (!o->mvalue() || !o->mvalue()->text ) return;
	      mrv::Preferences::schemes.apply_colors( o->mvalue()->text );
	      v->refresh();} open
                xywh {499 180 150 25} down_box BORDER_BOX align 1
              } {}
              Fl_Button {} {
                label {Reload Theme}
                user_data m user_data_type {ViewerUI*}
                callback {const Fl_Menu_Item* item = uiColorTheme->mvalue();
mrv::Preferences::schemes.reload_theme( item->text );
v->refresh();}
                tooltip {Reload color theme from mrViewer.colors file again to refresh change in colors} xywh {509 210 135 30}
              }
            }
            Fl_Group {} {
              label View open
              xywh {360 287 410 88} box ROUNDED_BOX
            } {
              Fl_Button uiPrefsViewBG {
                label Background
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Background Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();}
                tooltip {Selects the background color of areas outside the current image.} xywh {532 303 25 20} box EMBOSSED_BOX labelsize 11 align 4
              }
              Fl_Button uiPrefsViewTextOverlay {
                label {Text Overlay}
                user_data this user_data_type {PreferencesUI*}
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Text Overlay Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();
v->refresh();}
                tooltip {Selects the color of text overlays printed over the current image.} xywh {532 340 25 20} box EMBOSSED_BOX labelsize 11 align 4
              }
              Fl_Button uiPrefsViewSelection {
                label Selection
                user_data this user_data_type {PreferencesUI*}
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Selection Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();
v->refresh();}
                tooltip {Selects the color of the selection rectangle over the current image.} xywh {647 303 25 20} box EMBOSSED_BOX labelsize 11 align 4
              }
              Fl_Button uiPrefsViewHud {
                label HUD
                user_data this user_data_type {PreferencesUI*}
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick HUD Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();
v->refresh();}
                tooltip {Selects the color of HUD overlays.} xywh {651 340 21 20} box EMBOSSED_BOX align 4
              }
            }
          }
          Fl_Group {} {
            label Positioning
            xywh {302 38 530 362} box EMBOSSED_BOX hide
          } {
            Fl_Group {} {open
              xywh {339 119 451 48} box ROUNDED_BOX
            } {
              Fl_Check_Button uiWindowFixedPosition {
                label {Fixed Position}
                tooltip {When this option is set, mrViewer will open in the position you set here (except if the window goes out of the Desktop).} xywh {345 130 215 25} box UP_BOX down_box DOWN_BOX align 16
                class {mrv::CheckButton}
              }
              Fl_Value_Input uiWindowXPosition {
                label {X:}
                xywh {590 130 60 25} textcolor 56
              }
              Fl_Value_Input uiWindowYPosition {
                label {Y:}
                xywh {670 130 60 25} textcolor 56
              }
            }
            Fl_Group {} {open
              xywh {339 217 451 43} box ROUNDED_BOX
            } {
              Fl_Check_Button uiWindowFixedSize {
                label {Fixed Size}
                tooltip {When this option is on, mrViewer will always open to the size you set in W and H.} xywh {345 225 215 25} box UP_BOX down_box DOWN_BOX align 16
                class {mrv::CheckButton}
              }
              Fl_Value_Input uiWindowXSize {
                label {W:}
                xywh {597 225 60 25} minimum 640 maximum 4096 step 1 value 640 textcolor 56
              }
              Fl_Value_Input uiWindowYSize {
                label {H:}
                xywh {677 225 60 25} minimum 480 maximum 3680 step 1 value 480 textcolor 56
              }
            }
            Fl_Button {} {
              label {Take Current Window Values}
              user_data m user_data_type {ViewerUI*}
              callback {uiWindowXPosition->value( v->uiMain->x() );
uiWindowYPosition->value( v->uiMain->y() );
uiWindowXSize->value( v->uiMain->w() );
uiWindowYSize->value( v->uiMain->h() );}
              xywh {345 315 445 40} align 128
            }
          }
          Fl_Group {} {
            label {File Requester}
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Check_Button uiPrefsFileReqFolder {
              label {Single Click to Travel Drawers}
              xywh {360 61 25 27} box UP_BOX down_box DOWN_BOX align 136
              class {mrv::CheckButton}
            }
            Fl_Check_Button uiPrefsFileReqThumbnails {
              label {Thumbnails Active}
              xywh {362 106 23 27} box UP_BOX down_box DOWN_BOX align 136
              class {mrv::CheckButton}
            }
            Fl_Check_Button uiPrefsNativeFileChooser {
              label {Use Native File Chooser}
              tooltip {If selected, the natlve file chooser will be used.  If unselected, mrViewer's standard file chooser will be used.} xywh {362 148 23 27} box UP_BOX down_box DOWN_BOX align 136
            }
          }
          Fl_Group {} {
            label Playback selected
            xywh {302 38 530 362} box EMBOSSED_BOX align 5
          } {
            Fl_Group {} {
              label Defaults open
              xywh {312 73 501 278} box ROUNDED_BOX align 5
            } {
              Fl_Check_Button uiPrefsAutoPlayback {
                label {Auto Playback}
                tooltip {Start Playback when opening files.} xywh {495 115 25 25} box UP_BOX down_box DOWN_BOX align 4
                class {mrv::CheckButton}
              }
              Fl_Group {} {open
                xywh {330 161 450 152} box ROUNDED_BOX
              } {
                Fl_Group {} {
                  label Sequences open
                  xywh {345 184 415 92} box ROUNDED_FRAME color 35
                } {
                  Fl_Check_Button uiPrefsOverrideFPS {
                    label {Override FPS}
                    tooltip {Override playback fps when loading sequences.} xywh {585 190 25 25} box UP_BOX down_box DOWN_BOX align 4
                    class {mrv::CheckButton}
                  }
                  Fl_Group {} {
                    xywh {370 219 390 57}
                  } {
                    Fl_Value_Input uiPrefsFPS {
                      label Speed
                      xywh {460 226 80 25} color -1733777408 selection_color 0 maximum 120 value 24 textcolor 56
                    }
                    Fl_Menu_Button {} {
                      label FPS
                      callback {float g = (float) atof( o->child( o->value() )->label() );
uiPrefsFPS->value( g );} open
                      xywh {542 226 75 25}
                      class {mrv::PopupMenu}
                    } {
                      MenuItem {} {
                        label 60
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {59.94}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 50
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 30
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {29.97}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 25
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 24
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {14.985}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {12.5}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 12
                        xywh {10 10 100 20}
                      }
                    }
                  }
                }
                Fl_Choice uiPrefsLoopMode {
                  label {Looping Mode} open
                  tooltip {Select default looping mode in timeline.} xywh {540 279 90 28} box THIN_DOWN_BOX down_box BORDER_BOX
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label Loop
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label Stop
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label {Ping Pong}
                    xywh {10 10 100 20}
                  }
                }
              }
              Fl_Value_Input uiPrefsScrubbingSensitivity {
                label {Scrub Sensitivity}
                tooltip {This setting controls the sensitivity of scrubbing (SHIFT and then the mouse right and left).  Smaller values make the mouse move jump more frames while higher values does the opposite.} xywh {570 321 60 22} minimum 2 maximum 50 step 1 value 5 textcolor 56
              }
            }
          }
          Fl_Group {} {
            label Timeline
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Choice uiPrefsTimelineDisplay {
              label Display open
              tooltip {How to display timeline by default.} xywh {400 123 405 27} box THIN_DOWN_BOX down_box BORDER_BOX
              code0 {o->value(0);}
            } {
              MenuItem {} {
                label Frames
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label Seconds
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label Timecode
                xywh {15 15 100 20}
              }
            }
            Fl_Check_Button uiPrefsTimelineThumbnails {
              label {Preview Thumbnails}
              xywh {400 167 63 20} down_box DOWN_BOX
              class {mrv::CheckButton}
            }
          }
          Fl_Group {} {
            label {Pixel Toolbar}
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {open
              xywh {338 38 446 313}
            } {
              Fl_Choice uiPrefsPixelRGBA {
                label {RGBA Display}
                xywh {490 104 255 25} down_box BORDER_BOX align 132
              } {
                MenuItem {} {
                  label {Float Values}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Hex Values}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {8-bit Values}
                  xywh {5 5 100 20}
                }
              }
              Fl_Choice uiPrefsPixelValues {
                label {Pixel Values} open
                xywh {490 172 255 25} down_box BORDER_BOX align 132
              } {
                MenuItem {} {
                  label {Full Lut, Gamma and Gain}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Original without Gamma, Gain or Lut}
                  xywh {5 5 100 20}
                }
              }
              Fl_Choice uiPrefsPixelHSV {
                label {Secondary Display}
                xywh {490 247 255 23} down_box BORDER_BOX align 132
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label HSV
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label HSL
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {CIE XYZ}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {CIE xyY}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Lab CIELAB (L*a*b*)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {Luv CIELUV (L*u*v*)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {YUV (Analog PAL)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {YDbDr (Analog SECAM/PAL-N)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {YIQ (Analog NTSC)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {ITU-601 (Digital PAL/NTSC YCbCr)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {ITU-709 (Digital HDTV YCbCr)}
                  xywh {5 5 100 20} align 172
                }
              }
              Fl_Choice uiPrefsPixelLumma {
                label Luminance open
                xywh {490 307 255 25} down_box BORDER_BOX align 132
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label {Y (Luminance)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Y' (Lumma)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {L (Lightness)}
                  xywh {5 5 100 20}
                }
              }
            }
          }
          Fl_Group {} {
            label Actions
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label {Default Action} open
              xywh {334 116 460 223} box ROUNDED_BOX align 5
            } {
              Fl_Round_Button uiScrub {
                label { Scrub}
                xywh {340 131 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiMovePicture {
                label { Move Picture}
                xywh {340 161 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiSelection {
                label { Color Area Selection}
                xywh {340 191 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiDraw {
                label { Pencil}
                xywh {340 220 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiText {
                label { Text}
                xywh {340 250 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiErase {
                label { Eraser}
                xywh {340 280 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
            }
          }
          Fl_Group {} {
            label OCIO
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {open
              xywh {300 47 528 158}
            } {
              Fl_Check_Button uiPrefsUseOcio {
                label {Use OCIO}
                callback {mrv::Preferences::use_ocio = o->value();}
                tooltip {Use OCIO or revert to CTL/ICC.} xywh {365 75 25 25} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsSaveOcio {
                label {Save Ocio Config File in Preferences}
                tooltip {Save OCIO config in preferences file or leave it empty so that environment variables can be used.} xywh {495 75 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
              Fl_Group {} {
                xywh {350 146 400 59}
              } {
                Fl_Input uiPrefsOCIOConfig {
                  label {OCIO Config File}
                  tooltip {This is the path to your config.ocio file.  It can be set with the environment variable OCIO, which takes precedence over any saved setting.} xywh {370 164 305 30} align 1 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data m user_data_type {ViewerUI*}
                  callback {PreferencesUI* uiPrefs = v->uiPrefs;
std::string r = mrv::open_ocio_config( uiPrefs->uiPrefsOCIOConfig->value(), v );
if ( r.empty() ) return;

char buf[] = "OCIO=";
putenv( buf );
unsetenv( "OCIO" );
uiPrefs->uiPrefsOCIOConfig->value( r.c_str() );
uiPrefs->run(v);}
                  tooltip {Pick a config.ocio file from disk.} xywh {675 164 55 31}
                }
              }
            }
          }
          Fl_Group {} {
            label {OCIO Defaults}
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group uiOCIO_ICS {
              label {Input Color Space} open
              xywh {314 73 500 297} box ROUNDED_BOX
            } {
              Fl_Group {} {
                xywh {362 126 411 34}
              } {
                Fl_Input uiOCIO_8bits_ics {
                  label {8-bits}
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_8bits_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for 8 bit images (jpg, bmp, etc)
(Environment variable: MRV_OCIO_8bits_ICS)} xywh {397 130 283 25} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_8bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_8bits_ics->value(c.c_str());
uiOCIO_8bits_ics->do_callback();}
                  xywh {685 130 88 25}
                }
              }
              Fl_Group {} {
                xywh {370 173 403 32}
              } {
                Fl_Input uiOCIO_16bits_ics {
                  label {16-bits}
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_16bits_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for 16-bit images (cin, tiff, etc)
(Environment variable: MRV_OCIO_16bits_ICS)} xywh {397 177 283 25} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_16bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_16bits_ics->value(c.c_str());
uiOCIO_16bits_ics->do_callback();}
                  xywh {685 177 88 25}
                }
              }
              Fl_Group {} {
                xywh {370 216 403 39}
              } {
                Fl_Input uiOCIO_32bits_ics {
                  label {32-bits}
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_32bits_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for 32-bit int images (openexr integers, etc)
(Environment variable: MRV_OCIO_32bits_ICS)} xywh {397 221 283 24} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_32bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_32bits_ics->value(c.c_str());
uiOCIO_32bits_ics->do_callback();}
                  xywh {685 221 88 25}
                }
              }
              Fl_Group {} {
                xywh {367 262 406 33}
              } {
                Fl_Input uiOCIO_float_ics {
                  label float
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_float_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for half and float images (OpenEXR, dpx, etc)
(Environment variable: MRV_OCIO_float_ICS)} xywh {396 266 284 25} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_float_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_float_ics->value(c.c_str());
uiOCIO_float_ics->do_callback();}
                  xywh {685 266 88 25}
                }
              }
            }
          }
        }
        Fl_Group {} {open
          xywh {5 8 270 447} box PLASTIC_UP_BOX
        } {
          Fl_Tree {} {
            label Module
            user_data this user_data_type {PreferencesUI*}
            callback {for ( int i = 0; i < uiWizard->children(); ++i )
{
    Fl_Widget* w = uiWizard->child(i);
    Fl_Tree_Item* t = o->callback_item();
    if (!t || !w) return;

    if ( strcmp( _( w->label() ), t->label() ) == 0 )
	{
	     uiWizard->value( w );
	     break;
	 }
}}
            xywh {5 30 270 423}
            code0 {fill_tree(o);}
            code1 {o->showroot(false);}
            class {mrv::PreferencesTree}
          }
        }
        Fl_Group {} {open
          xywh {363 407 407 36}
        } {
          Fl_Button {} {
            label Revert
            user_data this user_data_type {PreferencesUI*}
            callback {// reload preferences
mrv::Preferences prefs(v, ViewerUI::app->settingsObject());}
            tooltip {Revert settings to last saved preferences.} xywh {423 409 132 31}
          }
          Fl_Button {} {
            label OK
            user_data m user_data_type {ViewerUI*}
            callback {v->uiPrefs->uiMain->hide();
v->uiPrefs->run(v);}
            tooltip {Accept settings but don't save.} xywh {604 409 132 31}
          }
        }
      }
    }
  }
  Function {PreferencesUI(ViewerUI* m)} {open
  } {
    code {make_window(m);} {}
  }
  Function {~PreferencesUI()} {} {
    code {delete uiMain; uiMain = NULL;} {}
  }
  Function {refresh()} {open
  } {
    code {} {}
  }
  Function {run(ViewerUI* m)} {open
  } {
    code {mrv::Preferences::run( m );} {}
  }
  Function {fill_tree(mrv::PreferencesTree* o)} {open
  } {
    code {Fl_Tree_Item* item = o->add( _("User Interface") );
o->add( _("User Interface/View Window") );
o->add( _("User Interface/View Window/Language and Colors") );
o->add( _("User Interface/Positioning") );
o->add( _("User Interface/File Requester") );
o->add( _("Playback") );
o->add( _("Timeline") );
o->add( _("Pixel Toolbar") );
o->add( _("Actions") );
o->add( _("OCIO") );
o->add( _("OCIO Defaults") );
o->select( item );} {}
  }
}
