# data file for the Fltk User Interface Designer (fluid)
version 1.0400
i18n_type 1
i18n_include {<libintl.h>}
i18n_conditional {}
i18n_function gettext
i18n_static_function _
header_name {.h}
code_name {.cxx}
decl {\#include "FL/Fl_Color_Chooser.H"} {public global
}

decl {\#include "mrvCore/mrvMedia.h"} {public global
}

decl {\#include "mrvFl/mrvPreferences.h"} {public global
}

decl {\#include "mrvWidgets/mrvButton.h"} {public global
}

decl {\#include "mrvFl/mrvChoice.h"} {public global
}

decl {\#include "mrvFl/mrvHorSlider.h"} {public global
}

decl {\#include "mrvFl/mrvOCIOBrowser.h"} {public global
}

decl {\#include "mrvFl/mrvFileRequester.h"} {public global
}

decl {\#include "mrvFl/mrvTree.h"} {public global
}

decl {\#include "mrvWidgets/mrvPopupMenu.h"} {public global
}

decl {\#include "make_ocio_chooser.h"} {public global
}

decl {\#include "mrViewer.h"} {public global
}

class PreferencesUI {open
} {
  Function {make_window(ViewerUI* m)} {open private
  } {
    Fl_Window uiMain {
      label Preferences
      user_data this user_data_type {PreferencesUI*}
      callback {mrv::Preferences prefs(v, ViewerUI::app->settingsObject() );
uiMain->hide();} open
      xywh {497 78 847 469} type Double hide resizable
      non_modal
    } {
      Fl_Group {} {open
        xywh {0 0 867 469} box FLAT_BOX
      } {
        Fl_Wizard uiWizard {
          label Settings open
          xywh {285 30 565 430} box PLASTIC_UP_BOX labelcolor 32
        } {
          Fl_Group {} {
            label {User Interface} open
            xywh {290 53 555 349} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label {Window Behavior}
              xywh {295 57 545 124} box ROUNDED_BOX
            } {
              Fl_Check_Button uiPrefsAlwaysOnTop {
                label {Always on Top}
                tooltip {When selected, mrViewer's window will always show up on top of other windows on the desktop.} xywh {314 71 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsSingleInstance {
                label {Single Instance}
                tooltip {When selected, only a single mrViewer instance is allowed.
If you try to open several mrViewers with different images, all these images will be sent to the already open mrViewer.} xywh {314 102 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsAutoFitImage {
                label {Auto Refit Image}
                tooltip {When selected, mrViewer will apply a fit image operation on each video played.  This effectly means the video will be resized automatically based on the size of the window.} xywh {314 135 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Group uiPrefsOpenMode {open
                xywh {605 70 195 95} box UP_BOX
              } {
                Fl_Round_Button {} {
                  label Normal
                  tooltip {When selected, mrViewer will resize its window to the first image.} xywh {610 76 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX value 1 align 8
                }
                Fl_Round_Button {} {
                  label Fullscreen
                  tooltip {When selected, mrViewer will start in full screen mode.} xywh {610 104 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                }
                Fl_Round_Button {} {
                  label Presentation
                  tooltip {When selected, mrViewer will start in presentation mode.} xywh {610 133 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                }
              }
            }
            Fl_Group {} {
              label {UI Elements}
              xywh {295 199 545 193} box ROUNDED_BOX
            } {
              Fl_Check_Button uiPrefsMenuBar {
                label {Menu Bar}
                tooltip {When selected, mrViewer will start with the menu bar already shown.} xywh {300 226 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsTopbar {
                label Topbar
                tooltip {When selected, mrViewer will start with its channel, gain, gamma toolbar visible.} xywh {301 254 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsPixelToolbar {
                label {Pixel Toolbar}
                tooltip {When selected, mrViewer will start with the pixel toolbar shown.} xywh {301 284 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
              }
              Fl_Check_Button uiPrefsTimeline {
                label Timeline
                tooltip {When selected, mrViewer will start with the timeline shown.} xywh {301 312 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsMacOSMenus {
                label {macOS Menus}
                tooltip {This is a macOS setting only.  When selected the menus will appear on the system toolbar instead of the mrViewer toolbar.} xywh {475 225 25 25} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Group {} {open
                xywh {300 330 170 55}
              } {
                Fl_Check_Button uiPrefsToolBar {
                  label Tooldock
                  tooltip {When selected, mrViewer will start with the waveform already open.} xywh {300 340 25 25} box UP_BOX down_box DOWN_BOX align 136
                  class {mrv::CheckButton}
                }
              }
              Fl_Group {} {open
                xywh {450 276 215 35}
              } {
                Fl_Check_Button uiPrefsImageInfo {
                  label {Media Info}
                  tooltip {When selected, mrViewer will start with the media information window already open.} xywh {475 280 25 25} box UP_BOX down_box DOWN_BOX align 136
                  class {mrv::CheckButton}
                }
              }
              Fl_Check_Button uiPrefsColorArea {
                label {Color Area}
                tooltip {When selected, mrViewer will start with the color area window already open.} xywh {475 311 25 25} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Group {} {open
                xywh {465 320 200 70}
              } {
                Fl_Check_Button uiPrefsPaintTools {
                  label {Action Tools}
                  tooltip {When selected, mrViewer will start with the action tools already showing.} xywh {476 341 25 25} box UP_BOX down_box DOWN_BOX align 136
                  class {mrv::CheckButton}
                }
              }
              Fl_Check_Button uiPrefsHistogram {
                label Histogram
                tooltip {When selected, mrViewer will start with the histogram already open.} xywh {670 257 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsVectorscope {
                label Vectorscope
                tooltip {When selected, mrViewer will start with the vectorscope already open.} xywh {670 286 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsWaveform {
                label Waveform
                tooltip {When selected, mrViewer will start with the waveform already open.} xywh {671 315 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
            }
          }
          Fl_Group {} {
            label {View Window}
            xywh {290 39 555 349} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label Defaults
              xywh {300 69 529 162} box ROUNDED_BOX
            } {
              Fl_Value_Input uiPrefsViewGain {
                label Gain
                tooltip {Sets the default gain when mrViewer starts.} xywh {400 86 80 25} maximum 64 value 1 textcolor 56
              }
              Fl_Value_Input uiPrefsViewGamma {
                label Gamma
                tooltip {Sets the default gamma when mrViewer starts.} xywh {690 85 60 25} maximum 4 value 1 textcolor 56
              }
              Fl_Choice uiPrefsCropArea {
                label Crop
                user_data this user_data_type {PreferencesUI*}
                tooltip {Allows you to select a standard cropping area around image.} xywh {330 128 155 25} box THIN_DOWN_BOX down_box BORDER_BOX align 1
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label {0.00 None}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.00 Square}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.19 Movietone}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.37 Academy (Full Frame)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.50 Still Photo}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.56 STV - HDTV (14:9)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.66 European Widescreen}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.77 HDTV (16:9)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {1.85 Widescreen (3-perf)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.00 Univisium}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.10 VistaVision}
                  xywh {15 15 100 20}
                }
                MenuItem {} {
                  label {2.20 70mm}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.35 CinemaScope (old 2.35)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {2.39 Panavision (new 2.35)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {4.00 Polyvision}
                  xywh {5 5 100 20}
                }
              }
              Fl_Check_Button uiPrefsViewPixelRatio {
                label {Compensate Pixel Ratio}
                tooltip {When mrViewer starts, the pixel aspect ratio compensation will be active by default.} xywh {513 125 20 22} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsViewLut {
                label {Lut Active}
                user_data this user_data_type {PreferencesUI*}
                tooltip {When mrViewer starts, the 3D Lut will be active.} xywh {513 150 20 22} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsSafeAreas {
                label {Safe Areas}
                user_data this user_data_type {PreferencesUI*}
                tooltip {When mrViewer starts, the safe area display will be active by default.} xywh {513 177 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsViewDisplayWindow {
                label {Display Window}
                tooltip {When mrViewer starts, the display window will be shown when appropiate.} xywh {335 158 20 22} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsViewDataWindow {
                label {Data Window}
                tooltip {When mrViewer starts, the data window will be shown when appropiate as a dotted line.} xywh {335 178 20 22} box UP_BOX down_box DOWN_BOX value 1 align 8
                class {mrv::CheckButton}
              }
              Fl_Choice uiPrefsZoomSpeed {
                label {Zoom Speed} open
                xywh {600 200 90 25} down_box BORDER_BOX
              } {
                MenuItem {} {
                  label Slow
                  xywh {10 10 30 20}
                }
                MenuItem {} {
                  label Medium
                  xywh {20 20 30 20}
                }
                MenuItem {} {
                  label Fast
                  xywh {30 30 30 20}
                }
              }
            }
            Fl_Group uiPrefsHud {
              label HUD
              user_data this user_data_type {PreferencesUI*} open
              tooltip {This area specifies which elements should be shown as a HUD overlay on the view screen.} xywh {305 251 524 126} box UP_BOX
            } {
              Fl_Check_Button uiPrefsHudFilename {
                label Filename
                user_data this user_data_type {PreferencesUI*}
                xywh {490 346 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudDirectory {
                label Directory
                user_data this user_data_type {PreferencesUI*}
                xywh {490 320 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFrame {
                label Frame
                user_data this user_data_type {PreferencesUI*}
                xywh {336 284 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFrameRange {
                label {Frame Range}
                user_data this user_data_type {PreferencesUI*}
                xywh {335 308 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFrameCount {
                label {Frame Count}
                user_data this user_data_type {PreferencesUI*}
                xywh {335 331 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudResolution {
                label Resolution
                user_data this user_data_type {PreferencesUI*}
                xywh {490 269 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudFPS {
                label FPS
                user_data this user_data_type {PreferencesUI*}
                xywh {336 261 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudAttributes {
                label Attributes
                user_data this user_data_type {PreferencesUI*}
                xywh {650 274 20 20} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsHudTimecode {
                label Timecode
                user_data this user_data_type {PreferencesUI*}
                xywh {335 354 20 18} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
            }
          }
          Fl_Group {} {
            label {Language and Colors}
            xywh {290 39 555 349} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label UI
              xywh {362 60 403 199} box ROUNDED_BOX
            } {
              Fl_Choice uiLanguage {
                label Language open
                xywh {505 80 160 25} down_box BORDER_BOX
              } {
                MenuItem {} {
                  label Arabic
                  xywh {125 125 100 20}
                }
                MenuItem {} {
                  label Czech
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label German
                  xywh {15 15 100 20}
                }
                MenuItem {} {
                  label English
                  xywh {35 35 100 20}
                }
                MenuItem {} {
                  label Spanish
                  xywh {25 25 100 20}
                }
                MenuItem {} {
                  label French
                  xywh {35 35 100 20}
                }
                MenuItem {} {
                  label Greek
                  xywh {145 145 100 20}
                }
                MenuItem {} {
                  label Italian
                  xywh {45 45 100 20}
                }
                MenuItem {} {
                  label Japanese
                  xywh {55 55 100 20}
                }
                MenuItem {} {
                  label Korean
                  xywh {65 65 100 20}
                }
                MenuItem {} {
                  label Dutch
                  xywh {75 75 100 20}
                }
                MenuItem {} {
                  label Polish
                  xywh {75 75 100 20}
                }
                MenuItem {} {
                  label Portuguese
                  xywh {85 85 100 20}
                }
                MenuItem {} {
                  label Romanian
                  xywh {95 95 100 20}
                }
                MenuItem {} {
                  label Russian
                  xywh {105 105 100 20}
                }
                MenuItem {} {
                  label Swedish
                  xywh {135 135 100 20}
                }
                MenuItem {} {
                  label Turkish
                  xywh {115 115 100 20}
                }
                MenuItem {} {
                  label Chinese
                  xywh {135 135 100 20}
                }
              }
              Fl_Choice uiScheme {
                label Scheme
                callback {Fl::scheme( o->mvalue()->text );}
                xywh {519 133 100 25} down_box BORDER_BOX align 1
              } {
                MenuItem {} {
                  label base
                  xywh {5 5 36 21}
                }
                MenuItem {} {
                  label plastic
                  xywh {15 15 36 21}
                }
                MenuItem {} {
                  label {gtk+}
                  xywh {25 25 36 21}
                }
                MenuItem {} {
                  label gleam
                  xywh {35 35 36 21}
                }
              }
              Fl_Choice uiColorTheme {
                label {Color Theme}
                user_data m user_data_type {ViewerUI*}
                callback {if (!o->mvalue() || !o->mvalue()->text ) return;
	      mrv::Preferences::schemes.apply_colors( o->mvalue()->text );
	      v->refresh();} open
                xywh {499 180 150 25} down_box BORDER_BOX align 1
              } {}
              Fl_Button {} {
                label {Reload Theme}
                user_data m user_data_type {ViewerUI*}
                callback {const Fl_Menu_Item* item = uiColorTheme->mvalue();
mrv::Preferences::schemes.reload_theme( item->text );
v->refresh();}
                tooltip {Reload color theme from mrViewer.colors file again to refresh change in colors} xywh {509 210 135 30}
              }
            }
            Fl_Group {} {
              label View open
              xywh {360 287 410 88} box ROUNDED_BOX
            } {
              Fl_Button uiPrefsViewBG {
                label Background
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Background Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();}
                tooltip {Selects the background color of areas outside the current image.} xywh {532 303 25 20} box EMBOSSED_BOX labelsize 11 align 4
              }
              Fl_Button uiPrefsViewTextOverlay {
                label {Text Overlay}
                user_data this user_data_type {PreferencesUI*}
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Text Overlay Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();
v->refresh();}
                tooltip {Selects the color of text overlays printed over the current image.} xywh {532 340 25 20} box EMBOSSED_BOX labelsize 11 align 4
              }
              Fl_Button uiPrefsViewSelection {
                label Selection
                user_data this user_data_type {PreferencesUI*}
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Selection Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();
v->refresh();}
                tooltip {Selects the color of the selection rectangle over the current image.} xywh {647 303 25 20} box EMBOSSED_BOX labelsize 11 align 4
              }
              Fl_Button uiPrefsViewHud {
                label HUD
                user_data this user_data_type {PreferencesUI*}
                callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick HUD Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();
v->refresh();}
                tooltip {Selects the color of HUD overlays.} xywh {651 340 21 20} box EMBOSSED_BOX align 4
              }
            }
          }
          Fl_Group {} {
            label Positioning
            xywh {302 38 530 362} box EMBOSSED_BOX hide
          } {
            Fl_Group {} {open
              xywh {339 119 451 48} box ROUNDED_BOX
            } {
              Fl_Check_Button uiWindowFixedPosition {
                label {Fixed Position}
                tooltip {When this option is set, mrViewer will open in the position you set here (except if the window goes out of the Desktop).} xywh {345 130 215 25} box UP_BOX down_box DOWN_BOX align 16
                class {mrv::CheckButton}
              }
              Fl_Value_Input uiWindowXPosition {
                label {X:}
                xywh {590 130 60 25} textcolor 56
              }
              Fl_Value_Input uiWindowYPosition {
                label {Y:}
                xywh {670 130 60 25} textcolor 56
              }
            }
            Fl_Group {} {open
              xywh {339 217 451 43} box ROUNDED_BOX
            } {
              Fl_Check_Button uiWindowFixedSize {
                label {Fixed Size}
                tooltip {When this option is on, mrViewer will always open to the size you set in W and H.} xywh {345 225 215 25} box UP_BOX down_box DOWN_BOX align 16
                class {mrv::CheckButton}
              }
              Fl_Value_Input uiWindowXSize {
                label {W:}
                xywh {597 225 60 25} minimum 640 maximum 4096 step 1 value 640 textcolor 56
              }
              Fl_Value_Input uiWindowYSize {
                label {H:}
                xywh {677 225 60 25} minimum 480 maximum 3680 step 1 value 480 textcolor 56
              }
            }
            Fl_Button {} {
              label {Take Current Window Values}
              user_data m user_data_type {ViewerUI*}
              callback {uiWindowXPosition->value( v->uiMain->x() );
uiWindowYPosition->value( v->uiMain->y() );
uiWindowXSize->value( v->uiMain->w() );
uiWindowYSize->value( v->uiMain->h() );}
              xywh {345 315 445 40} align 128
            }
          }
          Fl_Group {} {
            label {File Requester}
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Check_Button uiPrefsFileReqFolder {
              label {Single Click to Travel Drawers}
              xywh {360 61 25 27} box UP_BOX down_box DOWN_BOX align 136
              class {mrv::CheckButton}
            }
            Fl_Check_Button uiPrefsFileReqThumbnails {
              label {Thumbnails Active}
              xywh {362 106 23 27} box UP_BOX down_box DOWN_BOX align 136
              class {mrv::CheckButton}
            }
            Fl_Check_Button uiPrefsNativeFileChooser {
              label {Use Native File Chooser}
              tooltip {If selected, the natlve file chooser will be used.  If unselected, mrViewer's standard file chooser will be used.} xywh {362 148 23 27} box UP_BOX down_box DOWN_BOX align 136
            }
            Fl_Value_Slider uiPrefsThumbnailPercent {
              label {Thumbnail frame percent}
              callback {mrv::Media::thumbnail_percent = o->value();}
              xywh {427 220 244 22} type Horizontal align 129 maximum 100 step 1 textsize 14
            }
          }
          Fl_Group Playback {
            label Playback
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label Defaults open
              xywh {312 73 501 278} box ROUNDED_BOX align 5
            } {
              Fl_Check_Button uiPrefsAutoPlayback {
                label {Auto Playback}
                tooltip {Start Playback when opening files.} xywh {495 115 25 25} box UP_BOX down_box DOWN_BOX align 4
                class {mrv::CheckButton}
              }
              Fl_Group {} {open
                xywh {330 161 450 152} box ROUNDED_BOX
              } {
                Fl_Group {} {
                  label Sequences open
                  xywh {345 184 415 92} box ROUNDED_FRAME color 35
                } {
                  Fl_Check_Button uiPrefsOverrideFPS {
                    label {Override FPS}
                    tooltip {Override playback fps when loading sequences.} xywh {585 190 25 25} box UP_BOX down_box DOWN_BOX align 4
                    class {mrv::CheckButton}
                  }
                  Fl_Group {} {
                    xywh {370 219 390 57}
                  } {
                    Fl_Value_Input uiPrefsFPS {
                      label Speed
                      xywh {460 226 80 25} color -1733777408 selection_color 0 maximum 120 value 24 textcolor 56
                    }
                    Fl_Menu_Button {} {
                      label FPS
                      callback {float g = (float) atof( o->child( o->value() )->label() );
uiPrefsFPS->value( g );} open
                      xywh {542 226 75 25}
                      class {mrv::PopupMenu}
                    } {
                      MenuItem {} {
                        label 60
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {59.94}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 50
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 30
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {29.97}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 25
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 24
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {14.985}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label {12.5}
                        xywh {10 10 100 20}
                      }
                      MenuItem {} {
                        label 12
                        xywh {10 10 100 20}
                      }
                    }
                  }
                }
                Fl_Choice uiPrefsLoopMode {
                  label {Looping Mode} open
                  tooltip {Select default looping mode in timeline.} xywh {540 279 90 28} box THIN_DOWN_BOX down_box BORDER_BOX
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label Loop
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label Stop
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label {Ping Pong}
                    xywh {10 10 100 20}
                  }
                }
              }
              Fl_Value_Input uiPrefsScrubbingSensitivity {
                label {Scrub Sensitivity}
                tooltip {This setting controls the sensitivity of scrubbing (SHIFT and then the mouse right and left).  Smaller values make the mouse move jump more frames while higher values does the opposite.} xywh {570 321 60 22} minimum 2 maximum 50 step 1 value 5 textcolor 56
              }
            }
          }
          Fl_Group {} {
            label Timeline
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Choice uiPrefsTimelineDisplay {
              label Display
              tooltip {How to display timeline by default.} xywh {405 80 405 27} box THIN_DOWN_BOX down_box BORDER_BOX
              code0 {o->value(0);}
            } {
              MenuItem {} {
                label Frames
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label Seconds
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label Time
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label {Non-Drop Frame Timecode}
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label {Drop Frame Timecode}
                xywh {15 15 100 20}
              }
            }
            Fl_Choice uiPrefsTimelineSelectionDisplay {
              label Selection
              tooltip {How to display timeline selection by default.} xywh {405 122 405 27} box THIN_DOWN_BOX down_box BORDER_BOX
              code0 {o->value(0);}
            } {
              MenuItem {} {
                label {Hilited in Full Timeline}
                xywh {15 15 100 20}
              }
              MenuItem {} {
                label {Shortened to Timeline}
                xywh {15 15 100 20}
              }
            }
            Fl_Check_Button uiPrefsTimelineThumbnails {
              label {Preview Thumbnails}
              xywh {400 167 63 20} down_box DOWN_BOX
              class {mrv::CheckButton}
            }
          }
          Fl_Group {} {
            label {Pixel Toolbar} open
            xywh {300 38 532 362} box EMBOSSED_BOX align 5
          } {
            Fl_Group {} {open selected
              xywh {338 38 446 313}
            } {
              Fl_Choice uiPrefsPixelRGBA {
                label {RGBA Display}
                xywh {490 104 255 25} down_box BORDER_BOX align 132
              } {
                MenuItem {} {
                  label {Float Values}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Hex Values}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {8-bit Values}
                  xywh {5 5 100 20}
                }
              }
              Fl_Choice uiPrefsPixelValues {
                label {Pixel Values} open
                xywh {490 172 255 25} down_box BORDER_BOX align 132
              } {
                MenuItem {} {
                  label {Full Lut, Gamma and Gain}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Original without Gamma, Gain or Lut}
                  xywh {5 5 100 20}
                }
              }
              Fl_Choice uiPrefsPixelHSV {
                label {Secondary Display}
                xywh {490 247 255 23} down_box BORDER_BOX align 132
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label HSV
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label HSL
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {CIE XYZ}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {CIE xyY}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Lab CIELAB (L*a*b*)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {Luv CIELUV (L*u*v*)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {YUV (Analog PAL)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {YDbDr (Analog SECAM/PAL-N)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {YIQ (Analog NTSC)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {ITU-601 (Digital PAL/NTSC YCbCr)}
                  xywh {5 5 100 20} align 172
                }
                MenuItem {} {
                  label {ITU-709 (Digital HDTV YCbCr)}
                  xywh {5 5 100 20} align 172
                }
              }
              Fl_Choice uiPrefsPixelLumma {
                label Luminance open
                xywh {490 307 255 25} down_box BORDER_BOX align 132
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label {Y (Luminance)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Y' (Lumma)}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {L (Lightness)}
                  xywh {5 5 100 20}
                }
              }
            }
          }
          Fl_Group {} {
            label Actions
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label {Default Action} open
              xywh {334 116 460 223} box ROUNDED_BOX align 5
            } {
              Fl_Round_Button uiScrub {
                label { Scrub}
                xywh {340 131 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiMovePicture {
                label { Move Picture}
                xywh {340 161 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiSelection {
                label { Color Area Selection}
                xywh {340 191 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiDraw {
                label { Pencil}
                xywh {340 220 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiText {
                label { Text}
                xywh {340 250 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
              Fl_Round_Button uiErase {
                label { Eraser}
                xywh {340 280 20 25} type Radio down_box ROUND_DOWN_BOX selection_color 15
              }
            }
          }
          Fl_Group {} {
            label Caches open
            xywh {302 38 530 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label {Cache Sizes (in seconds)} open
              xywh {382 70 370 160} box ROUNDED_BOX
            } {
              Fl_Value_Slider uiPrefsCacheReadAhead {
                label {Read Ahead}
                tooltip {Sets the IO cache read ahead.} xywh {407 121 325 27} type {Horz Knob} align 1 minimum 0.1 maximum 50 step 0.1 value 5
                code0 {o->default_value( 5.0 );}
                class {mrv::HorSlider}
              }
              Fl_Value_Slider uiPrefsCacheReadBehind {
                label {Read Behind}
                tooltip {Sets the IO cache read behind.} xywh {407 176 325 27} type {Horz Knob} align 1 minimum 0.1 maximum 50 step 0.1 value 0.5
                code0 {o->default_value( 0.5 );}
                class {mrv::HorSlider}
              }
            }
            Fl_Group {} {
              label Performance
              xywh {380 270 375 110} box ROUNDED_BOX
            } {
              Fl_Counter uiPrefsVideoRequestCount {
                label {Video Request Count}
                xywh {590 295 90 25} align 4 minimum 1 maximum 200 step 1 value 48
              }
              Fl_Counter uiPrefsAudioRequestCount {
                label {Audio Request Count}
                xywh {590 335 90 25} align 4 minimum 1 maximum 400 step 1 value 16
              }
            }
          }
          Fl_Group {} {
            label {3D Luts}
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              xywh {300 47 528 158}
            } {
              Fl_Check_Button uiPrefsUseOcio {
                label {Use OCIO}
                callback {mrv::Preferences::use_ocio = o->value();}
                tooltip {Use OCIO or revert to CTL/ICC.} xywh {365 75 25 25} box UP_BOX down_box DOWN_BOX align 8
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsSaveOcio {
                label {Save Ocio Config File in Preferences}
                tooltip {Save OCIO config in preferences file or leave it empty so that environment variables can be used.} xywh {495 75 25 25} box UP_BOX down_box DOWN_BOX align 136
                class {mrv::CheckButton}
              }
              Fl_Group {} {
                xywh {350 146 400 59}
              } {
                Fl_Input uiPrefsOCIOConfig {
                  label {OCIO Config File}
                  tooltip {This is the path to your config.ocio file.  It can be set with the environment variable OCIO, which takes precedence over any saved setting.} xywh {370 164 305 30} align 1 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data m user_data_type {ViewerUI*}
                  callback {PreferencesUI* uiPrefs = v->uiPrefs;
std::string r = mrv::open_ocio_config( uiPrefs->uiPrefsOCIOConfig->value(), v );
if ( r.empty() ) return;

char buf[] = "OCIO=";
putenv( buf );
unsetenv( "OCIO" );
uiPrefs->uiPrefsOCIOConfig->value( r.c_str() );
uiPrefs->run(v);}
                  tooltip {Pick a config.ocio file from disk.} xywh {675 164 55 31}
                }
              }
            }
          }
          Fl_Group {} {
            label OCIO
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group uiOCIO_ICS {
              label {Input Color Space} open
              xywh {314 73 500 297} box ROUNDED_BOX
            } {
              Fl_Group {} {
                xywh {362 126 411 34}
              } {
                Fl_Input uiOCIO_8bits_ics {
                  label {8-bits}
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_8bits_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for 8 bit images (jpg, bmp, etc)
(Environment variable: MRV_OCIO_8bits_ICS)} xywh {397 130 283 25} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_8bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_8bits_ics->value(c.c_str());
uiOCIO_8bits_ics->do_callback();}
                  xywh {685 130 88 25}
                }
              }
              Fl_Group {} {
                xywh {370 173 403 32}
              } {
                Fl_Input uiOCIO_16bits_ics {
                  label {16-bits}
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_16bits_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for 16-bit images (cin, tiff, etc)
(Environment variable: MRV_OCIO_16bits_ICS)} xywh {397 177 283 25} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_16bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_16bits_ics->value(c.c_str());
uiOCIO_16bits_ics->do_callback();}
                  xywh {685 177 88 25}
                }
              }
              Fl_Group {} {
                xywh {370 216 403 39}
              } {
                Fl_Input uiOCIO_32bits_ics {
                  label {32-bits}
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_32bits_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for 32-bit int images (openexr integers, etc)
(Environment variable: MRV_OCIO_32bits_ICS)} xywh {397 221 283 24} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_32bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_32bits_ics->value(c.c_str());
uiOCIO_32bits_ics->do_callback();}
                  xywh {685 221 88 25}
                }
              }
              Fl_Group {} {
                xywh {367 262 406 33}
              } {
                Fl_Input uiOCIO_float_ics {
                  label float
                  user_data this user_data_type {PreferencesUI*}
                  callback {mrv::Media::ocio_float_ics = o->value();
v->refresh();}
                  tooltip {The name of the OCIO default image color space for half and float images (OpenEXR, dpx, etc)
(Environment variable: MRV_OCIO_float_ICS)} xywh {396 266 284 25} box THIN_DOWN_BOX labelsize 11 align 132 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data this user_data_type {PreferencesUI*}
                  callback {std::string c = make_ocio_chooser(uiOCIO_float_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
uiOCIO_float_ics->value(c.c_str());
uiOCIO_float_ics->do_callback();}
                  xywh {685 266 88 25}
                }
              }
            }
          }
          Fl_Group {} {
            label Loading open
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              xywh {312 58 509 215} box ROUNDED_BOX
            } {
              Fl_Choice uiPrefsLoadLibrary {
                label {JPG, PNG, DPX Load Library}
                tooltip {When loading a sequence, mrViewer will usually use OIIO loaders which give a good compromise between speed and quality.  OIIO loaders allow precaching and gaps in the sequence.  FFMPEG loaders are multithreaded JPG, DPX and PNG and can usually play in real time except when the resolution is too high.  In that case, the loaders will need one pass to cache all images as they don't allow precaching.  The FFMPEG loaders also cannot have gaps in the sequence.  Finally, ImageMagick loaders are not as fast but share the similar features of OIIO.} xywh {550 76 194 25} box UP_BOX down_box BORDER_BOX align 132
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label FFMPEG
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label OIIO
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label ImageMagick
                  xywh {5 5 100 20}
                }
              }
              Fl_Choice uiPrefsMissingFrames {
                label {Missing Frames}
                tooltip {When loading a sequence, and a frame is not found, mrViewer can either show a black frame or repeat the previous frame.} xywh {550 111 194 25} box UP_BOX down_box BORDER_BOX
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label {Black Frame}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Repeat Frame}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Scratched Repeat Frame}
                  xywh {5 5 100 20}
                }
              }
              Fl_Check_Button uiPrefsLoadSequence {
                label {Load Sequence on Drag&&Drop}
                tooltip {When dragging and dropping a frame from a sequence, make mrViewer load the full sequence.   Otherwise it loads the frame only.} xywh {331 142 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsLoadSequenceOnAssoc {
                label {Load Sequence on File Association && CommandLine}
                tooltip {When loading a frame from a sequence from a file association or command-line, make mrViewer load the full sequence.   Otherwise it loads the frame only.} xywh {331 175 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsAutoLoadImages {
                label {Auto load images as they change on disk}
                tooltip {When this option is active and an image changes on disk, mrViewer reloads it automatically.} xywh {331 208 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
              }
              Fl_Check_Button uiPrefsUses16Bits {
                label {Read 16 bit movies when possible}
                tooltip {Movie files will be read as 16bit pictures, instead of being loaded and cached as 8 bits.
This setting thus allows caching less pictures in memory but at an improved quality.} xywh {331 238 25 25} box UP_BOX down_box DOWN_BOX align 8
              }
            }
            Fl_Group {} {
              xywh {312 281 509 115} box ROUNDED_BOX
            } {
              Fl_Input uiPrefsImageVersionPrefix {
                label {Version Regex}
                tooltip {Regex used to detect version numbers.  The default _v creates one that finds images like:
  gizmo_v003.001.exr
(version 3, frame 1).} xywh {485 312 315 25} align 132 textcolor 56
                code0 {o->value( "_v" );}
              }
              Fl_Value_Input uiPrefsMaxImagesApart {
                label {Max. Images Apart}
                tooltip {Maximum number of images apart that the versions might be on disk.  If you have v1, and this is set to 5, only up to a gap with v6 would be found.  v7 would not get found as the gap would be too big.} xywh {725 340 70 25} minimum 1 maximum 100 step 1 value 10 textcolor 56
              }
            }
          }
          Fl_Group {} {
            label Saving
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label Reels open
              xywh {310 93 510 193} box ROUNDED_BOX
            } {
              Fl_Check_Button uiPrefsImagePathReelPath {
                label {Use Image Path to Set Default Reel Saving Path}
                tooltip {When this option is on, the file requester to save the reel will default to the path of the first image loaded in the current reel.} xywh {335 117 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                class {mrv::CheckButton}
              }
              Fl_Check_Button uiPrefsRelativePaths {
                label {Use Relative Paths in Reel Content}
                tooltip {With this option, the content of the reel (the reel images/movies) are saved with relative paths to the location of the reel.} xywh {337 162 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                class {mrv::CheckButton}
              }
            }
          }
          Fl_Group {} {
            label Video open
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Choice VideoDriver {
              label Driver
              xywh {413 50 364 26} box THIN_DOWN_BOX down_box BORDER_BOX
              class {mrv::Choice}
            } {
              MenuItem {} {
                label OpenGL
                xywh {5 5 100 20}
              }
            }
            Fl_Group {} {
              label Loading open
              xywh {315 111 494 183} box ROUNDED_BOX
            } {
              Fl_Value_Input uiPrefsFFmpegThreadCount {
                label {FFmpeg Thread Count}
                tooltip {This setting effects the number of threads used in decoding your video.  A value of 0 means to use 4 threads by default.} xywh {560 173 58 33} maximum 64 step 1 textcolor 56
              }
              Fl_Value_Input uiPrefsSequenceThreadCount {
                label {Sequence Thread Count}
                tooltip {This setting effects the number of threads used in decoding your video.  A value of 0 means to use 4 threads by default.} xywh {560 127 58 33} minimum 1 maximum 64 step 1 value 16 textcolor 56
              }
              Fl_Choice uiPrefsYUVConversion {
                label {YUV Conversion}
                user_data uiMain user_data_type {ViewerUI*}
                callback {int idx = o->value();

switch(idx)
{
case 0:
idx = 0; break;
case 1:
idx = 1; break;
case 2:
idx = 2; break;
case 3:
default:
idx = 5; break;
}
mrv::Media::colorspace_override = idx;}
                tooltip {Controls the YUV Conversion of the movie in the shader to emulate different tv standards.
Use File YUV Hint will take the value from the movie being loaded if the data is present.
BT709 is a Rec.709 emulation (HDTV) and has black levels in the 16 range of 255.
Unspecified is your standard computer translation of YUV.
BT470BG/SMPTE170M emulate ITU-R BT 601-6 625 (PAL/SECAM).} xywh {490 229 213 31} box THIN_DOWN_BOX down_box BORDER_BOX
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label {Use File YUV Hint}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Always use BT709}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Always use Unspecified}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Always use BT470BG / SMPTE170M}
                  xywh {5 5 100 20}
                }
              }
            }
            Fl_Group {} {
              label Saving
              xywh {315 318 495 49} box ROUNDED_BOX
            } {
              Fl_Choice uiPrefsVideoCodec {
                label {Video Codec}
                user_data uiMain user_data_type {ViewerUI*}
                tooltip {Controls the codec used by default in saving a movie file.} xywh {500 327 135 28} box THIN_DOWN_BOX down_box BORDER_BOX
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label hevc
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label h264
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label mpeg4
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label prores_ks
                  xywh {5 5 100 20}
                }
              }
            }
          }
          Fl_Group {} {
            label Compositing
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              xywh {333 82 434 142} box ROUNDED_BOX
            } {
              Fl_Choice uiPrefsBlendMode {
                label {Blend Mode}
                user_data m user_data_type {ViewerUI*}
                callback {v->uiView->redraw();}
                tooltip {OpenGL blend compositing mode.
Traditional:
SC x SA + DC x ( 1 - SA)
Premult:
SC + DC x ( 1 - SA )
where SC is source color, SA is source alpha, and DC is destination color.} xywh {510 146 167 25} box THIN_DOWN_BOX down_box BORDER_BOX
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label Traditional
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label Premult
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Traditional No Gamma}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {Premult No Gamma}
                  xywh {5 5 100 20}
                }
              }
            }
            Fl_Group {} {open
              xywh {340 259 444 120} box ROUNDED_BOX
            } {
              Fl_Light_Button uiPrefsResizeBackground {
                label {Resize Background to Match Foreground}
                xywh {365 291 405 39} align 148
              }
            }
          }
          Fl_Group {} {
            label Audio
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Choice uiPrefsAudioDevice {
              label Device
              xywh {425 65 346 26} box THIN_DOWN_BOX down_box BORDER_BOX
              code0 {//;}
              class {mrv::Choice}
            } {}
            Fl_Group {} {
              xywh {333 136 408 137} box ROUND_DOWN_BOX
            } {
              Fl_Slider uiPrefsAudioVolume {
                label {Default Volume}
                tooltip {Default audio at opening mrViewer.} xywh {455 231 226 24} type Horizontal align 1 value 1
              }
              Fl_Button uiPrefsAudioMute {
                label Mute
                user_data uiPrefsAudioVolume user_data_type {Fl_Slider*}
                callback {o->value( !o->value() );
if ( o->value() )
   v->deactivate();
else
   v->activate();}
                xywh {415 231 40 25}
              }
            }
            Fl_Light_Button uiPrefsOverrideAudio {
              label {Override Audio}
              xywh {471 165 169 36} align 148
            }
          }
          Fl_Group {} {
            label Subtitles
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Choice uiPrefsSubtitleFont {
              label Font
              user_data m user_data_type {ViewerUI*}
              xywh {446 107 349 35} box THIN_DOWN_BOX down_box BORDER_BOX align 132
              class {mrv::Choice}
            } {}
            Fl_Choice uiPrefsSubtitleEncodingChoices {
              user_data m user_data_type {ViewerUI*}
              callback {int i = o->value();
uiPrefsSubtitleEncoding->value( o->child(i)->label() );
uiPrefsSubtitleEncoding->do_callback();}
              xywh {605 167 190 36} box THIN_DOWN_BOX down_box BORDER_BOX
              class {mrv::Choice}
            } {
              MenuItem {} {
                label {ISO-8859-1}
                xywh {5 5 100 20}
              }
              MenuItem {} {
                label {ISO-8859-2}
                xywh {5 5 100 20}
              }
              MenuItem {} {
                label {UTF-8}
                xywh {5 5 100 20}
              }
              MenuItem {} {
                label {UTF-16}
                xywh {5 5 100 20}
              }
            }
            Fl_Input uiPrefsSubtitleEncoding {
              label Encoding
              user_data m user_data_type {ViewerUI*}
              xywh {446 167 152 36} align 132 textcolor 56
            }
          }
          Fl_Group {} {
            label Errors
            xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {open
              xywh {331 70 446 242} box ENGRAVED_BOX
            } {
              Fl_Choice uiPrefsRaiseLogWindowOnError {
                label {Raise Log Window on Error} open
                xywh {595 115 110 25} down_box BORDER_BOX align 132
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label Never
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label Once
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label Always
                  xywh {5 5 100 20}
                }
              }
            }
          }
          Fl_Group {} {
            label Images
            tooltip {Options controlling the OpenEXR reader/writer} xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label Saving open
              xywh {344 212 415 156} box ROUNDED_BOX labelsize 15
            } {
              Fl_Light_Button uiPrefsACESClipMetadata {
                label {ACES Clip Metadata}
                tooltip {Whether to save ACES clip metadata in a sidecar.} xywh {410 255 315 30} align 148
              }
              Fl_Light_Button uiPrefsAllLayers {
                label {All Layers}
                tooltip {Whether to save all layers in image file if there are several.} xywh {410 305 315 30}
              }
            }
            Fl_Group {} {
              label Metadata open
              xywh {337 69 422 103} box ROUNDED_BOX
            } {
              Fl_Light_Button uiMetadataEditable {
                label {Editable by Default}
                xywh {410 110 315 40} align 148
              }
            }
          }
          Fl_Group {} {
            label OpenEXR
            tooltip {Options controlling the OpenEXR reader/writer} xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label Loading open
              xywh {344 84 408 131} box ROUNDED_BOX labelsize 15
            } {
              Fl_Value_Input uiPrefsOpenEXRThreadCount {
                label {Thread Count}
                tooltip {Use multiple threads when loading a frame.} xywh {580 117 50 28} minimum 1 maximum 16 step 1 value 4 textcolor 56
              }
              Fl_Value_Input uiPrefsOpenEXRGamma {
                label Gamma
                tooltip {Gamma to use when loading an exr and OCIO is off.} xywh {580 177 51 28} maximum 16 value 1 textcolor 56
              }
            }
            Fl_Group {} {
              label Saving open
              xywh {344 243 415 132} box ROUNDED_BOX labelsize 15
            } {
              Fl_Choice uiPrefsOpenEXRCompression {
                label Compression
                user_data this user_data_type {PreferencesUI*}
                callback {std::string compression = o->child(o->value())->label();
if ( compression == "DWAA" ||
     compression == "DWAB" )
{
v->uiPrefsOpenEXRDWACompression->activate();
}
else
{
v->uiPrefsOpenEXRDWACompression->deactivate();
}}
                tooltip {Compression to use when saving an exr.} xywh {500 267 180 30} down_box BORDER_BOX
                class {mrv::Choice}
              } {
                MenuItem {} {
                  label None
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label RLE
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label {ZIP SCANLINE}
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label ZIP
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label PIZ
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label PXR24
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label B44
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label B44A
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label DWAA
                  xywh {5 5 100 20}
                }
                MenuItem {} {
                  label DWAB
                  xywh {5 5 100 20}
                }
              }
              Fl_Value_Slider uiPrefsOpenEXRDWACompression {
                label {DWA Compression}
                tooltip {DWA/DWB compression to use when saving an exr with that compression scheme.} xywh {540 312 138 30} type Horizontal align 4 minimum 1 maximum 250 step 10 value 45 deactivate
              }
            }
          }
          Fl_Group {} {
            label {RED3D - BRAW}
            tooltip {Options controlling the R3D / BRAW readers} xywh {300 38 532 362} box EMBOSSED_BOX align 5 hide
          } {
            Fl_Group {} {
              label {R3D Loading}
              xywh {344 84 408 80} box ROUNDED_BOX labelsize 15
            } {
              Fl_Choice uiPrefsR3DScale {
                label {Proxy Scale} open
                xywh {560 115 72 25} down_box BORDER_BOX
              } {
                MenuItem {} {
                  label {1:1}
                  xywh {5 5 36 21}
                }
                MenuItem {} {
                  label {1:2}
                  xywh {15 15 36 21}
                }
                MenuItem {} {
                  label {1:4}
                  xywh {25 25 36 21}
                }
                MenuItem {} {
                  label {1:8}
                  xywh {35 35 36 21}
                }
                MenuItem {} {
                  label {1:16}
                  xywh {45 45 36 21}
                }
              }
            }
            Fl_Group {} {
              label {BRAW Loading}
              xywh {344 195 408 81} box ROUNDED_BOX labelsize 15
            } {
              Fl_Choice uiPrefsBRAWScale {
                label {Proxy Scale} open
                xywh {560 223 72 25} down_box BORDER_BOX
              } {
                MenuItem {} {
                  label {1:1}
                  xywh {20 20 36 21}
                }
                MenuItem {} {
                  label {1:2}
                  xywh {30 30 36 21}
                }
                MenuItem {} {
                  label {1:4}
                  xywh {40 40 36 21}
                }
                MenuItem {} {
                  label {1:8}
                  xywh {50 50 36 21}
                }
              }
            }
          }
        }
        Fl_Group {} {
          xywh {5 8 270 447} box PLASTIC_UP_BOX
        } {
          Fl_Tree {} {
            label Module
            user_data this user_data_type {PreferencesUI*}
            callback {for ( int i = 0; i < uiWizard->children(); ++i )
{
    Fl_Widget* w = uiWizard->child(i);
    Fl_Tree_Item* t = o->callback_item();
    if (!t || !w) return;

    if ( strcmp( _( w->label() ), t->label() ) == 0 )
	{
	     uiWizard->value( w );
	     break;
	 }
}}
            xywh {5 30 270 423}
            code0 {fill_tree(o);}
            code1 {o->showroot(false);}
            class {mrv::PreferencesTree}
          }
        }
        Fl_Group {} {open
          xywh {363 407 407 36}
        } {
          Fl_Button {} {
            label Revert
            user_data this user_data_type {PreferencesUI*}
            callback {// reload preferences
mrv::Preferences prefs(v, ViewerUI::app->settingsObject());}
            tooltip {Revert settings to last saved preferences.} xywh {423 409 132 31}
          }
          Fl_Button {} {
            label OK
            user_data m user_data_type {ViewerUI*}
            callback {v->uiPrefs->uiMain->hide();
v->uiPrefs->run(v);}
            tooltip {Accept settings but don't save.} xywh {604 409 132 31}
          }
        }
      }
    }
  }
  Function {PreferencesUI(ViewerUI* m)} {open
  } {
    code {make_window(m);} {}
  }
  Function {~PreferencesUI()} {} {
    code {delete uiMain; uiMain = NULL;} {}
  }
  Function {refresh()} {open
  } {
    code {} {}
  }
  Function {run(ViewerUI* m)} {open
  } {
    code {mrv::Preferences::run( m );} {}
  }
  Function {fill_tree(mrv::PreferencesTree* o)} {open
  } {
    code {Fl_Tree_Item* item = o->add( _("User Interface") );
o->add( _("User Interface/View Window") );
o->add( _("User Interface/View Window/Language and Colors") );
o->add( _("User Interface/Positioning") );
o->add( _("User Interface/File Requester") );
o->add( _("Playback") );
o->add( _("Timeline") );
o->add( _("Pixel Toolbar") );
o->add( _("Actions") );
o->add( _("Caches") );
o->add( _("3D Luts") );
o->add( _("3D Luts/OCIO") );
o->add( _("Loading") );
o->add( _("Saving") );
o->add( _("Video") );
o->add( _("Compositing") );
o->add( _("Audio") );
o->add( _("Subtitles") );
o->add( _("Errors") );
o->add( _("Images") );
o->add( _("OpenEXR") );
o->add( _("RED3D - BRAW") );
o->select( item );} {}
  }
}
